swagger: '2.0'
info:
  version: '0.1'
  title: API for foodcarts proxy
host: artomatic-test.apigee.net
basePath: /v1/streetcarts/foodcarts
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /:
    get:
      description: Returns a list of all food carts.
      operationId: getFoodcarts
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FoodCart'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
    post:
      description: Add a new food cart to the database.
      operationId: createFoodcart
      parameters:
        - name: body
          in: body
          required: true
          description: A food cart object.
          schema:
            $ref: '#/definitions/FoodCart'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FoodCart'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
  '/{cart_id}':
    get:
      description: Returns a food cart specified by ID.
      operationId: getFoodcartById
      parameters:
        - name: cart_id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FoodCart'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
    put:
      description: Update a food cart specified by ID.
      operationId: updateFoodcartById
      parameters:
        - name: cart_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          description: A food cart object.
          schema:
            $ref: '#/definitions/FoodCart'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FoodCart'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
    delete:
      description: Deletes a food cart specified by ID.
      operationId: deleteFoodcartById
      parameters:
        - name: cart_id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FoodCart'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
  '/{cart_id}/menus':
    get:
      description: Get the menus associated with a food cart.
      operationId: getFoodcartMenus
      parameters:
        - name: cart_id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Menu'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
    post:
      description: Add a menu to a food cart.
      operationId: addFoodcartMenu
      parameters:
        - name: cart_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          description: A menu object.
          schema:
            $ref: '#/definitions/Menu'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/FoodCart'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
  '/{cart_id}/items':
    get:
      description: Get the menu items associated with a food cart.
      operationId: getFoodcartItems
      parameters:
        - name: cart_id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Item'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
    post:
      description: Add a menu item to a food cart.
      operationId: addFoodcartItem
      parameters:
        - name: cart_id
          in: path
          required: true
          type: string
        - name: body
          in: body
          required: true
          description: A menu object.
          schema:
            $ref: '#/definitions/Item'
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/Item'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/UnauthorizedResponse'
definitions:
  Menu:
    type: object
    properties:
      uuid:
        type: string
      menuName:
        type: string
      description:
        type: string
      menus: 
        type: array
        items:
            $ref: '#/definitions/Item'
  Item:
    type: object
    properties:
      uuid:
        type: string
      cartID:
        type: string
      description:
        type: string
      itemName:
        type: string
      price:
        type: string
  FoodCart:
    type: object
    properties:
      uuid:
        type: string
      name:
        type: string
      description:
        type: string
      hours:
        type: string
      location:
        type: object
        properties:
          address:
            type: string
          city:
            type: string
          region:
            type: string
          country:
            type: string
          postalCode:
            type: string
          latitude:
            type: string
          longitude:
            type: string
          shortAddress:
            type: string
      menus: 
        type: array
        items:
            $ref: '#/definitions/Menu'
      items: 
        type: array
        items:
            $ref: '#/definitions/Item'
  UnauthorizedResponse:
    required:
      - message
    properties:
      message:
        type: string
